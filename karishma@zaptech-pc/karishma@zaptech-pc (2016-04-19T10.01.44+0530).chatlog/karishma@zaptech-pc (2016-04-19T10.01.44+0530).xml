<?xml version="1.0" encoding="UTF-8" ?>
<chat xmlns="http://purl.org/net/ulf/ns/0.4-02" account="vivek@192.168.15.43" service="Jabber" adiumversion="1.5.10.2" buildid="a23057ce854d">
<event type="windowOpened" sender="vivek@192.168.15.43" time="2016-04-19T10:10:00+0530"></event>
<status type="online" sender="karishma@zaptech-pc" time="2016-04-19T10:10:00+0530" alias="karishma"></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T10:10:00+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:10:18+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">ok</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:10:24+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">gud morning</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:11:08+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">nd</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:11:29+0530" alias="vivek "><div>Hi</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:11:43+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">add to cart ma if product added alredy hoi to update thavu joiye rplace nai</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:12:24+0530" alias="vivek "><div>update thai che , Replace nahi thato</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:12:33+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">no</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:12:38+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">u check</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:12:44+0530" alias="vivek "><div>Then please explain how</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:12:52+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">wait</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:13:00+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">i jst come</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:13:07+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">run karu project</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:13:11+0530" alias="vivek "><div>ok</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:14:00+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">nw</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:14:14+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">u add 1 product in cart</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:14:20+0530" alias="vivek "><div>added then</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:14:43+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">agin add 3  qty</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:14:56+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">then product add not rplace</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:15:13+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">got it ?</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:16:13+0530" alias="vivek "><div>I am reflecting the quantity for the same product</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:16:33+0530" alias="vivek "><div>Instead of adding the same product again</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:16:38+0530" alias="vivek "><div>this is correct only</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:16:48+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">wait</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:16:52+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">first</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:16:56+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">u in dashboard</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:16:57+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">?</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:17:01+0530" alias="vivek "><div>ok</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:17:13+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">then add carrot 2 qty </span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:17:17+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:17:23+0530" alias="vivek "><div>added</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:17:37+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">then again click on carrot nd add again 2 qty</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:17:51+0530" alias="vivek "><div>then it is going to replace only</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:17:56+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">then in dash board should be 4 not 2 </span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:17:58+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">?</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:18:04+0530" alias="vivek "><div>ohhh i got it</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:18:11+0530" alias="vivek "><div>Its my mistake wait</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:18:17+0530" alias="vivek "><div>I got your point</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:18:21+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T10:28:50+0530" alias="karishma"></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T10:38:23+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:47:31+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">sub category ma loader jaldi hide thai jaay pa6i data rplace thta hata </span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:47:40+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">yesterday i checked</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:47:43+0530" alias="vivek "><div>ok</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:47:57+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">collection 2 ma</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:48:06+0530" alias="vivek "><div>ok</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:48:18+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">top bar mathi change kariye to </span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:48:24+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:48:41+0530" alias="vivek "><div>you are right</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:48:46+0530" alias="vivek "><div>i will do that</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:51:10+0530" alias="vivek "><div>Please take pull from git</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:51:20+0530" alias="vivek "><div>And check all the issue is solved</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:51:26+0530" alias="vivek "><div>For kart and loader</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:53:33+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T10:55:22+0530" alias="vivek "><div>Please take pull from git minor change</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T10:55:52+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:03:22+0530" alias="vivek "><div>Hello</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:03:32+0530" alias="vivek "><div>Please check all the issue is solved</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:05:07+0530" alias="vivek "><div> </div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:05:26+0530" alias="vivek "><div>?</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:07:31+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:08:59+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">ave place request kyare vachhe na aave ?</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:09:17+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">bcz  yesterday sir told so</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:09:44+0530" alias="vivek "><div>i did not got you </div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:09:51+0530" alias="vivek "><div>Please explain again</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:10:23+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">from nw place req nt come in middle ?</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:10:46+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">bcz yesterday sir told its nt gud so</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:10:49+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">got it ?</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:11:10+0530" alias="vivek "><div>please you make it proper</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:11:40+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">bcz apda hath ma issue nai aavtu</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:11:46+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">emne j madi jaay so</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:12:02+0530" alias="vivek "><div>I am not getting you</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:12:14+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">yester i check so many time i nt got</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:12:31+0530" alias="vivek "><div>please check in device</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:12:32+0530" alias="vivek "><div>now</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:12:43+0530" alias="vivek "><div>not in simulator</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:12:44+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">hmm</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:14:21+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">i also checked in device</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:14:41+0530" alias="vivek "><div>I have solved that issue </div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:14:45+0530" alias="vivek "><div>in morning</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:14:50+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:15:07+0530" alias="vivek "><div>now you and Ashishbhia will not get the place request issue</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:15:13+0530" alias="vivek "><div>bhai*</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:15:27+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:15:31+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">gud</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:15:51+0530" alias="vivek "><div>Please check all the issue is solved now</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:16:05+0530" alias="vivek "><div>what and all you got yesterday</div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T11:25:34+0530" alias="karishma"></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T11:25:45+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T11:26:49+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">beverages ma fruit drinks &amp; juices ma place request 2 vaar aave 6</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T11:27:03+0530" alias="vivek "><div>ok</div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T11:56:12+0530" alias="karishma"></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T12:02:14+0530" alias="karishma"></status>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T12:12:21+0530" alias="karishma"></status>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:15:35+0530" alias="vivek "><div>Please send the screen shot</div></message>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T12:16:29+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T12:16:45+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">hmna mne pn nai aavtu issue</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T12:16:51+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">m testing in device</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:16:54+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:17:06+0530" alias="vivek "><div>please take screen shot in device only</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:17:15+0530" alias="vivek "><div>then let me know once you are free</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T12:19:05+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">ok</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T12:19:17+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">m doing</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:19:31+0530" alias="vivek "><div>Please check whole application </div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:19:47+0530" alias="vivek "><div>Later at night we should not get any issue</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T12:23:56+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T12:42:18+0530" alias="karishma"></status>
<status type="away" sender="karishma@zaptech-pc" time="2016-04-19T12:52:14+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">Away</span></div></status>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:53:28+0530" alias="vivek "><div>bhumesh</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T12:53:32+0530" alias="vivek "><div>//<br />//  FieldsViewController.m<br />//  DynamicForm<br />//<br />//  Created by Prajeet Shrestha on 8/19/15.<br />//  Copyright (c) 2015 EK Solutions Pvt Ltd. All rights reserved.<br />//<br /><br />#import &quot;DescriptionViewController.h&quot;<br />#import &quot;PJListViewController.h&quot;<br />#import &quot;FieldsViewController.h&quot;<br />#import &quot;PJDynamicForm.h&quot;<br />#import &quot;PJRadioCell.h&quot;<br />#import &quot;DropDowncell.h&quot;<br />#import &quot;AddClientSectionFourViewController.h&quot;<br />#import &quot;UsersData.h&quot;<br />#import &quot;Constant.h&quot;<br />#import &quot;Head.h&quot;<br />#import &quot;AppDelegate.h&quot;<br /><br />@interface FieldsViewController ()&lt;FieldTableViewCell,DescriptionViewControllerDelegate,PJListViewControllerDelegate,SearchDelegate&gt; {<br />    BOOL needsShowConfirmation;<br />    NSMutableArray *cellObjects;<br />    //NSMutableDictionary *dataDictionary1;<br />    UsersData *objcUser;<br />    NSString *radio,*textField,*dropDown,*datePicker;<br />    NSInteger pos,Newtags;<br />    NSString *ansRadio,*ansTextField, *ansDropDown, *ansDatePicker;<br />    NSArray *data1, *data2,*data3;<br />    NSMutableArray *arrdropDownStr;<br />    NSMutableArray *checkBoxTag;<br />    NSMutableDictionary *dataDictionary;<br />    NSMutableArray *arrRadioData;<br />    NSInteger count1;<br />    NSInteger countDrop;<br />    NSUserDefaults *defaults;<br />}<br />@property (nonatomic) NSString *selectedDate;<br />@property (nonatomic,copy)NSString *dropDownstr;<br /><br />@end<br /><br />@implementation FieldsViewController{<br />    NSMutableArray *optionbtn;<br />    NSMutableArray *checkbtn;<br />    UIButton *senderBtnReferenceForDropDown;<br />    <br />}<br />@synthesize cellDefinition;<br /><br />- (instancetype)init<br />{<br />    self = [super init];<br />    pos=0;<br />    if (self) {<br />        self = [self initWithNibName:@&quot;FieldsViewController&quot; bundle:[NSBundle mainBundle]];<br />    }<br />    return self;<br />}<br />-(void)viewWillAppear:(BOOL)animated<br />{<br />    // NSMutableArray *data1 =[[NSMutableArray alloc]init];<br />    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    NSLog(@&quot;%@&quot;,[appdel.checkBoxTag description]);<br />    NSLog(@&quot;%@&quot;,[appdel.dataDictionary description]);<br />    <br />    NSString *temp=[appdel.dataDictionary objectForKey:@&quot;nQueid&quot;];<br />    NSString *temp1=[appdel.dataDictionary objectForKey:@&quot;sCorrectAns&quot;];<br />    IsDropDownSelected=false;<br />    NSString *temp2=[appdel.dataDictionary objectForKey:@&quot;sType&quot;];<br />    data1 = [[NSArray alloc]init];<br />    data2 = [[NSArray alloc]init];<br />    data3 = [[NSArray alloc]init];<br />    data1 = [temp componentsSeparatedByString:@&quot;,&quot;];<br />    data2 = [temp1 componentsSeparatedByString:@&quot;,&quot;];<br />    data3 = [temp2 componentsSeparatedByString:@&quot;,&quot;];<br />    <br />    NSLog(@&quot;%@&quot;,data1);<br />    NSLog(@&quot;%@&quot;,data2);<br />    NSLog(@&quot;%@&quot;,data3);<br />    self.title = self.titleString;<br />    // AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    //appdel.isBack=YES;<br />}<br /><br />- (void)viewDidLoad {<br />    [super viewDidLoad];<br />    arrDrop=[[NSMutableArray alloc]init];<br />    dicDrop=[[NSMutableDictionary alloc]init];<br />    arrRadioData=[[NSMutableArray alloc]init];<br />    countDropDown=0;<br />    countDrop=0;<br />    Newtags=0;<br />    //dataDictionary1=[[NSMutableDictionary alloc]init];<br />    arrdropDownStr=[[NSMutableArray alloc]init];<br />    <br />    objcUser=[UsersData sharedManager];<br />    checkBoxTag=[[NSMutableString alloc]init];<br />    UIImageView *teAsyncImageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@&quot;Background&quot;]];<br />    [teAsyncImageView setFrame:self.tableView.frame];<br />    <br />    self.tableView.backgroundView = teAsyncImageView;<br />    //self.tableView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@&quot;Background&quot;]];<br />    optionbtn=[[NSMutableArray alloc]init];<br />    checkbtn=[[NSMutableArray alloc]init];<br />    rc=[[PJRadioCell alloc]init];<br />    dc=[[DropDowncell alloc]init];<br />    dc.dropDown=[[UIButton alloc]init];<br />    rc.selectedOption=[[NSMutableArray alloc]init];<br />    dc.arrOptions=[[NSMutableArray alloc]init];<br />    self.tableView.delegate   = self;<br />    self.tableView.dataSource = self;<br />    cellObjects               = [NSMutableArray new];<br />    needsShowConfirmation     = YES;<br />    [self.navigationController.navigationBar setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor whiteColor],NSForegroundColorAttributeName,[UIFont fontWithName:@&quot;Helvetica Neue&quot; size:28],NSFontAttributeName, nil]];<br />    self.title = self.titleString;<br />    // self.navigationController.navigationBar.titleTextAttributes = @{NSForegroundColorAttributeName: PJColorFieldTitle};<br />    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];<br />    <br />    defaults = [NSUserDefaults standardUserDefaults];<br />    <br />    [self loadPopUpTable];<br />    <br />    [[NSNotificationCenter defaultCenter] addObserver:self<br />                                             selector:@selector(hidePopUps)<br />                                                 name:@&quot;hidePopUp&quot;<br />                                               object:nil];<br />    <br />}<br /><br />-(void) hidePopUps{<br />    [self.objPopUpTableController toggleHidden:YES];<br />    IsDropDownSelected=false;<br />}<br />-(void)viewWillDisappear:(BOOL)animated{<br />    // isNext=YES;<br />    <br />    [self saveData];<br />    <br />    self.navigationItem.title=@&quot;&quot;;<br />    [super viewDidAppear:animated];<br />    UsersData *dataCheak=[UsersData sharedManager];<br />    dataCheak.strCheak=@&quot;YES&quot;;<br />    <br />}<br />-(void)viewDidAppear:(BOOL)animated<br />{<br />    UsersData *dataCheak=[UsersData sharedManager];<br />    <br />    //    if ([dataCheak.strCheak isEqualToString:@&quot;YES&quot;]) {<br />    //        [self.navigationController popViewControllerAnimated:NO];<br />    //        dataCheak.strCheak=@&quot;NO&quot;;<br />    //    }<br />    <br />    <br />    <br />    self.navigationItem.title  = @&quot;New Customer&quot;;<br />    <br />}<br />- (void)didReceiveMemoryWarning {<br />    [super didReceiveMemoryWarning];<br />    // Dispose of any resources that can be recreated.<br />}<br /><br />- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {<br />    if (self.sections.count &gt; 0) {<br />        PJSection *sectionElement = self.sections[section];<br />        return sectionElement.elements.count;<br />    } else {<br />        return cellDefinition.count;<br />    }<br />}<br /><br />- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {<br />    if (self.sections.count &gt; 0) {<br />        return self.sections.count;<br />    } else {<br />        return 1;<br />    }<br />    <br />}<br /><br />- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {<br />    <br />    if (self.sections.count &gt; 0) {<br />        PJSection *sectionElement = self.sections[section];<br />        PJHeader *header          = [PJHeader new];<br />        // header.title.text         = sectionElement.name;<br />        return header;<br />    } else {<br />        return nil;<br />    }<br />    <br />}<br /><br />- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {<br />    <br />    if(self.objPopUpTableController)<br />    {<br />        [self.objPopUpTableController toggleHidden:YES];<br />        IsDropDownSelected=false;<br />    }<br />    <br />    <br />    FieldTableViewCell *cell = (FieldTableViewCell *)[tableView cellForRowAtIndexPath:indexPath];<br />    [self.view endEditing:YES];<br />    if ([cell isKindOfClass:[PJListField class]]) {<br />        PJListViewController *vc   = [[PJListViewController alloc]init];<br />        PJListField *modelListCell = (PJListField *)cell;<br />        vc.titleString             = modelListCell.titleText;<br />        vc.delegate                = self;<br />        vc.indexPath               = modelListCell.indexPath;<br />        vc.listItems               = modelListCell.listItems;<br />        vc.selectionOption         = modelListCell.selectionOption;<br />        if (modelListCell.userSelectedRows != nil) {<br />            vc.userSelectedRows        = [modelListCell.userSelectedRows mutableCopy];<br />        }<br />        <br />        [self showViewController:vc sender:nil];<br />        <br />    } else if ([cell isKindOfClass:[PJDescription class]]) {<br />        <br />        DescriptionViewController *vc = [[DescriptionViewController alloc]init];<br />        vc.titleString                = cell.titleText;<br />        vc.delegate                   = self;<br />        vc.initialValue               = cell.value;<br />        vc.indexPath                  = cell.indexPath;<br />        [self showViewController:vc sender:nil];<br />    }<br />    else if ([cell isKindOfClass:[DropDowncell class]]) {<br />        <br />        <br />        //        vc.titleString                = cell.titleText;<br />        //        vc.delegate                   = self;<br />        //        vc.initialValue               = cell.value;<br />        //        vc.indexPath                  = cell.indexPath;<br />        <br />    }<br />}<br /><br />- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {<br />    UITableViewCell *cell = [self cellTypeForIndexPath:indexPath forTableView:tableView];<br />    <br />    UIButton *btn;<br />    if([cell isKindOfClass:[PJRadioCell class]])<br />    {<br />        PJRadioCell *textCell          = (PJRadioCell *)cell;<br />        if(!textCell)<br />            textCell   = [[PJRadioCell alloc] init];<br />        PJRadioCell *modelListCell = (PJRadioCell *)cell;<br />        textCell.selectedOption=rc.selectedOption;<br />        [self Radiobtnselect];<br />        <br />        NSLog(@&quot;%@&quot;,  textCell.selectedOption);<br />        <br />        <br />        //    cell.isSelected = [textCell.selectedOption containsObject:modelListCell.titleText]? YES : NO;<br />        //    if (cell.isSelected) {<br />        //        [btn setImage:[UIImage imageNamed:@&quot;check&quot;] ];<br />        //        // set image of selected<br />        //    }<br />        //    else{<br />        //        [cell.btnSelection setImage:[UIImage imageNamed:@&quot;uncheck&quot;] ];<br />        //        // set unselected image<br />        //    }<br />    }<br />    return cell;<br />}<br /><br /><br />#pragma mark - TableView Delegates<br />- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {<br />    if(IS_IPAD)<br />    {<br />        return PJFieldHeight+50;<br />    }<br />    return PJFieldHeight;<br />    <br />}<br /><br />- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {<br />    if (self.sections.count &gt; 0) {<br />        return 0;<br />    } else {<br />        return 0;<br />    }<br />}<br /><br />#pragma mark - Private Method<br />- (UITableViewCell *)cellTypeForIndexPath:(NSIndexPath *)indexPath forTableView:(UITableView *)tableView {<br />    FieldTableViewCell *definition;<br />    if (self.sections.count &gt; 0) {<br />        PJSection *sectionElement = self.sections[indexPath.section];<br />        definition                = sectionElement.elements[indexPath.row];<br />    } else {<br />        definition                = cellDefinition[indexPath.row];<br />    }<br />    <br />    NSString *cellType             = [self cellTypeForDefinitionClass:[definition class]];<br />    //Initialize common properties of all Cells<br />    <br />    FieldTableViewCell *cell       = [tableView dequeueReusableCellWithIdentifier:cellType];<br />    cell.key                       = definition.key;<br />    cell.titleText                 = definition.titleText;<br />    cell.isRequired                = definition.isRequired;<br />    cell.indexPath                 = indexPath;<br />    cell.delegate                  = self;<br />    cell.defaultValue              = definition.defaultValue;<br />    cell.backgroundColor = PJColorBackground;<br />    <br />    [self segragateValuesByTypeInCell:cell forDefinition:definition];<br />    [self pushCellInArray:cell];<br />    return cell;<br />}<br /><br />- (void)pushCellInArray:(FieldTableViewCell *)cell {<br />    //Check if cell is already inserted. The cell is unique by it&apos;s indexPath<br />    NSPredicate *predicate = [NSPredicate predicateWithFormat:@&quot;indexPath == %@&quot;, cell.indexPath];<br />    NSArray *filteredArray = [cellObjects filteredArrayUsingPredicate:predicate];<br />    id firstFoundObject    = nil;<br />    firstFoundObject       = filteredArray.count &gt; 0 ? filteredArray.firstObject : nil;<br />    //If there the cellObjects array has no cell of indexPath then insert the cell into array<br />    if (firstFoundObject == nil) {<br />        [cellObjects addObject:cell];<br />    }<br />}<br /><br />- (void)segragateValuesByTypeInCell:(id)cell forDefinition:(id)definition {<br />    Class class = [cell class];<br />    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    // NSLog(@&quot;%@&quot;,[appdel.dataDictionary1 description]);<br />    <br />    if (class == [PJTextField class] ) {<br />        PJTextField *modelTextField    = (PJTextField *)definition;<br />        PJTextField *textCell          = (PJTextField *)cell;<br />        textCell.nQueid=modelTextField.nQueid;<br />        <br />        for (int i=0; i&lt;data1.count; i++) {<br />            if ([textCell.nQueid isEqualToString: data1[i]]) {<br />                if([textCell.textField.text isEqualToString:@&quot;&quot;])<br />                    textCell.textField.text=data2[i];<br />            }<br />        }<br />        textCell.placeholderText       = modelTextField.placeholderText;<br />        textCell.inputType             = modelTextField.inputType;<br />        <br />        [textCell setUp];<br />        <br />    } else if (class == [PJBoolField class]) {<br />        <br />        PJBoolField *boolField = (PJBoolField *)cell;<br />        PJBoolField *modelBoolField = (PJBoolField *)definition;<br />        boolField.nQueid=modelBoolField.nQueid;<br />        boolField.valueWhenOn       = modelBoolField.valueWhenOn;<br />        boolField.valueWhenOff      = modelBoolField.valueWhenOff;<br />        [boolField setUp];<br />        <br />    } else if (class == [PJDescription class]) {<br />        <br />        PJDescription *descriptionCell  = (PJDescription *)cell;<br />        PJDescription *modelDescriptionCell = (PJDescription *)definition;<br />        descriptionCell.placeholderText = modelDescriptionCell.placeholderText;<br />        [descriptionCell setUp];<br />        <br />    } else if (class == [PJDatePicker class]) {<br />        <br />        PJDatePicker *datePicker1   = (PJDatePicker *)cell;<br />        PJDatePicker *modelDatePicker = (PJDatePicker *)definition;<br />        datePicker1.nQueid=modelDatePicker.nQueid;<br />        //datePicker1.textField.text=[objcUser.dataDictionary1 valueForKey:@&quot;1&quot;];<br />        for (int i=0; i&lt;data1.count; i++) {<br />            if ([datePicker1.nQueid isEqualToString: data1[i]]) {<br />                if([datePicker1.textField.text isEqualToString:@&quot;&quot;])<br />                    datePicker1.textField.text=data2[i];<br />            }<br />            <br />        }<br />        datePicker1.datePickerMode  = modelDatePicker.datePickerMode;<br />        datePicker1.placeholderText = modelDatePicker.placeholderText;<br />        [datePicker1 setUp];<br />        <br />    } else if (class == [PJListField class]) {<br />        <br />        PJListField *listField      = (PJListField *)cell;<br />        PJListField *modelListField = (PJListField *)definition;<br />        listField.listItems         = modelListField.listItems;<br />        listField.selectionOption   = modelListField.selectionOption;<br />        listField.defaultValue      = modelListField.defaultValue;<br />        [listField setUp];<br />        <br />    } else if (class == [PJSubmitCell class]) {<br />        <br />    } else if(class == [PJRadioCell class]) {<br />        <br />        <br />        PJRadioCell *modelTextField    = (PJRadioCell *)definition;<br />        PJRadioCell *textCell          = (PJRadioCell *)cell;<br />        <br />        // UIButton *btn = (UIButton*)[[[textCell subviews] superview] viewWithTag:Newtags+pos];<br />        //if(!btn)<br />        if(appdel.selectionCount&gt;=(appdel.selectionCount*1000)-Newtags)<br />        Newtags=Newtags+1000;<br />        <br />        <br />        //        else if([[[textCell superview] superview] isKindOfClass:[UITableViewCell class]]){<br />        //<br />        //<br />        //<br />        //        }<br />        //        else if ([[[textCell superview] superview] isKindOfClass:[UIButton class]])<br />        //        {<br />        //<br />        //<br />        //<br />        //        }<br />        //       UIButton *btn = (UIButton*)[[[textCell subviews] superview] viewWithTag:Newtags+pos];<br />        //        if(!btn)<br />        //        Newtags=Newtags+1000;<br />        <br />        textCell.count= modelTextField.count;<br />        textCell.nQueid=modelTextField.nQueid;<br />        <br />        textCell.arrOptions=modelTextField.arrOptions;<br />        textCell.Type=modelTextField.Type;<br />        for(int i=0;i&lt;[textCell.count intValue];i++)<br />        {<br />            [self setbutton:i pjtableviewcell:cell];<br />        }<br />        // textCell.inputType             = modelTextField.inputType;<br />        [textCell setUp];<br />        for (int i=0; i&lt;data1.count; i++) {<br />            if ([textCell.nQueid isEqualToString: data1[i] ]) {<br />                if ([data3[i] isEqualToString:@&quot;radio&quot;]) {<br />                    [self Radiobtnselect];<br />                    <br />                }<br />            }<br />            <br />        }<br />        for (int i=0; i&lt;data1.count; i++) {<br />            if ([textCell.nQueid isEqualToString: data1[i] ]) {<br />                if ([data3[i] isEqualToString:@&quot;checkBox&quot;]) {<br />                    [self Checkboxselect];<br />                    [rc.selectedOption addObject:data2[i]];<br />                }<br />            }<br />            <br />        }<br />    }<br />    else if(class == [DropDowncell class])<br />    {<br />        <br />        DropDowncell *modelTextField    = (DropDowncell *)definition;<br />        DropDowncell *textCell          = (DropDowncell *)cell;<br />        NSLog(@&quot;%ld&quot;,(long)textCell.indexPath.row);<br />        <br />        textCell.arrOptions=modelTextField.arrOptions;<br />        textCell.nQueid=modelTextField.nQueid;<br />        textCell.dropDown.tag=(int)textCell.indexPath.row;<br />        dc.dropDown.tag=(int)textCell.indexPath.row;<br />        <br />        [dc.dropDown addTarget:self action:@selector(ClickOn:) forControlEvents:UIControlEventTouchUpInside];<br />        dc.arrOptions=textCell.arrOptions;<br />        self.objPopUpTableController.dataSource =dc.arrOptions;<br />        self.objPopUpTableController.tableView.frame = CGRectMake(0,self.view.frame.size.height-100, self.tableView.frame.size.width, dc.frame.size.height+50);<br />        [textCell setUp];<br />        [textCell.dropDown setTitle:@&quot;select&quot; forState:UIControlStateNormal];<br />        for (int i=0; i&lt;data2.count; i++) {<br />            if ([textCell.nQueid isEqualToString:data1[i] ])  {<br />                AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />                NSString *str=[appdel.dicDropDown valueForKey:textCell.nQueid];<br />                if([str length]&gt;0)<br />                {<br />                    [textCell.dropDown setTitle:str forState:UIControlStateNormal];<br />                    _dropDownstr=str;<br />                    [arrdropDownStr addObject:str];<br />                    [dicDrop setObject:str forKey:[NSString stringWithFormat:@&quot;%ld&quot;,dc.dropDown.tag]];<br />                }<br />                //                [textCell.dropDown setTitle:data2[i] forState:UIControlStateNormal];<br />            }<br />            <br />        }<br />        <br />    }<br />    else if(class == [PJHeader class])<br />    {<br />        PJHeader *modelTextField    = (PJHeader *)definition;<br />        PJHeader *textCell          = (PJHeader *)cell;<br />        textCell.title.text=modelTextField.title.text;<br />    }<br />    else if(class ==[Head class])<br />    {<br />        <br />    }<br />    <br />    <br />}<br />-(void)setbutton:(int)xpos pjtableviewcell:(PJRadioCell *)tblcell<br />{<br />    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    PJRadioCell *textCell          = (PJRadioCell *)tblcell;<br />    UIButton *btn;<br />    <br />    //btn = (UIButton*)[textCell viewWithTag:Newtags+pos];<br />   // if(!btn){<br />        btn=[[UIButton alloc]initWithFrame:CGRectMake(xpos*95, 30, 95, 25)];<br />        [textCell.contentView addSubview:btn];<br />        <br />    //}<br />    //   btn.tag=2000+xpos;<br />    btn.tag=Newtags+pos;<br />    pos=pos+1;<br />    <br />    [btn setTitle:[@&quot; &quot; stringByAppendingString:textCell.arrOptions[xpos]] forState:UIControlStateNormal];<br />    [btn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];<br />    [btn.titleLabel setFont: [UIFont boldSystemFontOfSize:PJSizeFieldValue]];<br />    NSString *strTag;<br />    if([textCell.Type isEqualToString:@&quot;Checkbox&quot;])<br />    {<br />        //        if(checkbtn.count==0)<br />        [checkbtn addObject:btn];<br />        strTag=[NSString stringWithFormat:@&quot;%ld&quot;,btn.tag];<br />        if ([appdel.checkBoxTag containsObject:strTag]) {<br />            [btn setSelected:YES];<br />        }<br />        else<br />        {<br />            [btn setSelected:NO];<br />        }<br />        [btn addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];<br />        if([rc.selectedOption containsObject:btn.titleLabel.text])<br />        {<br />            btn.selected=YES;<br />        }<br />        [btn setImage:[UIImage imageNamed:@&quot;unSelect&quot;] forState:UIControlStateNormal];<br />        [btn setImage:[UIImage imageNamed:@&quot;Select&quot;] forState:UIControlStateSelected];<br />    }<br />    else if([textCell.Type isEqualToString:@&quot;Radio&quot;])<br />    {<br />        strTag=[NSString stringWithFormat:@&quot;%ld&quot;,btn.tag];<br />        <br />        [optionbtn addObject:btn];<br />        [btn addTarget:self action:@selector(RadiobtnClicked:) forControlEvents:UIControlEventTouchUpInside];<br />        <br />        [btn setImage:[UIImage imageNamed:@&quot;RadiounSelect&quot;] forState:UIControlStateNormal];<br />        [btn setImage:[UIImage imageNamed:@&quot;RadioSelect&quot;] forState:UIControlStateSelected];<br />    }<br />    <br />    // [appdel.checkBoxTag removeAllObjects];<br />}<br />- (void)RadiobtnClicked:(id)sender<br />{<br />    [self.view endEditing:YES];<br />    UIButton *btn = (UIButton*)sender;<br />    NSInteger temp=btn.tag/1000;<br />    for  (id BtnSelect in optionbtn   ) {<br />        UIButton *btnComp = (UIButton*)BtnSelect;<br />        NSInteger temp2=btnComp.tag/1000;<br />        if(temp == temp2)<br />        {<br />            if (btn.tag==btnComp.tag) {<br />                <br />                btnComp.selected=YES;<br />                _seletedStr=btnComp.titleLabel.text;<br />                if(![arrRadioData containsObject:_seletedStr])<br />                {<br />                    [arrRadioData addObject:btnComp.titleLabel.text];<br />                }<br />                <br />            }else {<br />                btnComp.selected=NO;<br />                if([arrRadioData containsObject:btnComp.titleLabel.text])<br />                {<br />                    [arrRadioData removeObject:btnComp.titleLabel.text];<br />                    // [arrRadioData addObject:btnComp.titleLabel.text];<br />                }<br />            }<br />        }<br />        <br />    }<br />    <br />    <br />    <br />}<br />- (void)Radiobtnselect<br />{<br />    // UIButton *btn = (UIButton*);<br />    <br />    for (int i=0; i&lt;data2.count; i++) {<br />        for  (id BtnSelect in optionbtn   ) {<br />            UIButton *btnComp = (UIButton*)BtnSelect;<br />            <br />            if ([btnComp.titleLabel.text isEqualToString:data2[i]]) {<br />                btnComp.selected=YES;<br />                btnComp.enabled=YES;<br />                if(![arrRadioData containsObject:btnComp.titleLabel.text])<br />                {<br />                    [arrRadioData addObject:btnComp.titleLabel.text];<br />                }<br />                _seletedStr=btnComp.titleLabel.text;<br />            }<br />        }<br />    }<br />    <br />}<br /><br />-(void)Checkboxselect<br />{<br />    <br />    for  (id BtnSelect in checkbtn   ) {<br />        UIButton *btnComp = (UIButton*)BtnSelect;<br />        for (int i=0; i&lt;data2.count; i++) {<br />            if (btnComp.titleLabel.text == data2[i]) {<br />                <br />                btnComp.selected=YES;<br />                btnComp.enabled=YES;<br />                [rc.selectedOption addObject:data2[i]];<br />            }<br />            <br />        }<br />    }<br />    <br />    //     AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    //    for  (id BtnSelect in checkbtn   ) {<br />    //        UIButton *btnComp = (UIButton*)BtnSelect;<br />    //    for (int i=0; i&lt;(int)appdel.checkBoxTag; i++) {<br />    //<br />    //<br />    //        btnComp.selected=YES;<br />    //        btnComp.enabled=YES;<br />    //        [rc.selectedOption addObject:data2[i]];<br />    //    }<br />    //    }<br />}<br />- (void)btnClicked:(id)sender<br />{<br />    [self.view endEditing:YES];<br />    //[checkBoxTag addObject:sender];<br />    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    <br />    <br />    UIButton *btn = (UIButton*)sender;<br />    btn.selected=!btn.selected;<br />    if (btn.selected) {<br />        [appdel.checkBoxTag addObject:[NSString stringWithFormat:@&quot;%ld&quot;,(long)btn.tag]];<br />    }<br />    else<br />    {<br />        [appdel.checkBoxTag removeObject:[NSString stringWithFormat:@&quot;%ld&quot;,(long)btn.tag]];<br />    }<br />    if(btn.isSelected==TRUE)<br />        [rc.selectedOption addObject:[btn.titleLabel text]];<br />    else<br />        [rc.selectedOption removeObject:[btn.titleLabel text]];<br />    <br />}<br />- (NSString *)cellTypeForDefinitionClass:(Class)class {<br />    NSString *cellType;<br />    if (class == [PJTextField class] ) {<br />        cellType = kPJTextField;<br />        return cellType;<br />    } else if (class == [PJBoolField class]) {<br />        cellType = kPJBoolField;<br />        return cellType;<br />    } else if (class == [PJDatePicker class]) {<br />        cellType = kPJDatePicker;<br />        return cellType;<br />    } else if (class == [PJDescription class]) {<br />        cellType = kPJDescription;<br />        return cellType;<br />    } else if (class == [PJListField class]) {<br />        cellType = kPJListField;<br />        return cellType;<br />    } else if (class == [PJSubmitCell class]) {<br />        cellType = kPJSubmitCell;<br />        return cellType;<br />    }else if(class == [PJRadioCell class])<br />    {<br />        cellType= kPJRadioCell;<br />        return cellType;<br />    }<br />    else if(class ==[DropDowncell class])<br />    {<br />        cellType= kPJDropDownCell;<br />        return cellType;<br />    }<br />    else if(class ==[PJHeader class]) {<br />        cellType= kPJHeader;<br />        return cellType;<br />    }<br />    else if(class ==[Head class])<br />    {<br />        cellType=@&quot;Head&quot;;<br />        return cellType;<br />    }<br />    else<br />    {<br />        return nil;<br />    }<br />    <br />}<br /><br />#pragma mark - FieldTableViewCellDelegate<br /><br />- (void)submitAction:(id)sender {<br />    [self.view endEditing:YES];<br />    <br />    //[self saveData];<br />    <br />    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    <br />    <br />    //    if ((appdel.isNext==NO)) {<br />    //        [self nextBtn];<br />    //    }<br />    //else{<br />    <br />    UIStoryboard *storyboard =[UIStoryboard storyboardWithName:@&quot;Main&quot; bundle:NULL];<br />    AddClientSectionFourViewController *fourth=(AddClientSectionFourViewController *)[storyboard instantiateViewControllerWithIdentifier:@&quot;AddClientSectionFourViewController&quot;];<br />    fourth.dataDictionary = [[NSMutableDictionary alloc] init];<br />    fourth.dataDictionary = appdel.dataDictionary ;<br />    [self.navigationController pushViewController:fourth animated:NO];<br />    <br />    // }<br />    <br />}<br /><br />#pragma mark POPUP Delegate<br />#pragma mark - Delegate<br /><br />-(void)loadPopUpTable{<br />    //    UIEdgeInsets buttonEdges = UIEdgeInsetsMake(0, 5, 0, -5);<br />    self.objPopUpTableController = [[PopUpTableViewController alloc] initWithStyle:UITableViewStylePlain];<br />    if(IS_IPAD)<br />    {<br />        self.objPopUpTableController.tableView.frame = CGRectMake(0, dc.frame.origin.y, self.view.frame.size.width, 200);<br />    }<br />    else<br />        self.objPopUpTableController.tableView.frame = dc.frame;<br />    // CGRectMake(0, 0, dc.frame.size.width+150, dc.frame.size.height);<br />    self.objPopUpTableController.delegate=self;<br />    self.objPopUpTableController.view.layer.zPosition = 100;<br />    <br />    //    self.objPopUpTableController.delegate = self;<br />    [self.view addSubview:self.objPopUpTableController.tableView];<br />    [self.objPopUpTableController toggleHidden:YES];<br />    <br />    self.objPopUpTableController.tableView.layer.borderWidth = 2;<br />    self.objPopUpTableController.tableView.layer.borderColor = [[UIColor blackColor] CGColor];<br />}<br />-(void)hiddenToggle<br />{<br />    [self.objPopUpTableController toggleHidden:YES];<br />    <br />}<br />-(void)ClickOn:(UIButton*)btn<br />{<br />    <br />    selectBtn = btn;<br />    strSelectedDrop=[NSString stringWithFormat:@&quot;%ld&quot;,(long)btn.tag];<br />    DropDowncell *textCell = (DropDowncell *)[[btn superview] superview] ;<br />    if([textCell isKindOfClass:[DropDowncell class]])<br />        NSLog(@&quot;%@&quot;,textCell.arrOptions);<br />    [self.objPopUpTableController reloadDataWithSource:textCell.arrOptions];<br />    <br />    // UIButton *btn=(UIButton*)sender;<br />    if(!IsDropDownSelected)<br />    {<br />        [self.objPopUpTableController toggleHidden:NO];<br />        IsDropDownSelected=true;<br />    }<br />    else<br />    {<br />        [self.objPopUpTableController toggleHidden:true];<br />        IsDropDownSelected=false;<br />    }<br />    <br />    <br />    [self.view endEditing:YES];<br />    //CGRectMake(0, btn.frame.origin.y+300, 100, 100);<br />    <br />    <br />    //CGRectMake(btn.frame.origin.x, btn.frame.origin.y, dc.frame.size.width+150, dc.frame.size.height+100);<br />    <br />    //    UIButton *btn;<br />    //    btn=nil;<br />    //    if(dropDown)<br />    //    {<br />    //        [dropDown removeFromSuperview];<br />    //    }<br />    //    senderBtnReferenceForDropDown=nil;<br />    //    senderBtnReferenceForDropDown = (UIButton*)sender;<br />    //    CGFloat f = 70;<br />    //    dropDown=[[NIDropDown alloc]showDropDownMenu:senderBtnReferenceForDropDown dropDownheight:&amp;f dropDownarr:dc.arrOptions dropDowndirection:@&quot;down&quot;];<br />    //    dropDown.delegate=self;<br />    //<br />    //<br />    //    dc.frame = CGRectMake(0, 0, dc.frame.size.width+150, dc.frame.size.height+450);<br />}<br /><br />#pragma mark - Search Delegate<br />-(void)didSelectSearchedString:(NSString *)selectedString{<br />    <br />    UIButton *btn= (UIButton *)dc.dropDown;<br />    [self.objPopUpTableController toggleHidden:YES];<br />    [selectBtn setTitle:selectedString forState:UIControlStateNormal];<br />    IsDropDownSelected=false;<br />    [dicDrop setObject:selectedString forKey:strSelectedDrop];<br />    <br />    //    dc.dropDown.backgroundColor = [UIColor redColor];<br />    //    dc.dropDown.layer.zPosition=10000;<br />    //    [dc.dropDown setTitle:selectedString forState:UIControlStateNormal];<br />    //senderBtnReferenceForDropDown.titleLabel.text=selectedString<br />    <br />    _dropDownstr=selectedString;<br />    [arrdropDownStr addObject:selectedString];<br />    <br />    <br />}<br />- (void)textFieldDidBeginEditing:(UITextField *)textField {<br />    //  [self.delegate controlActivated:self];<br />    <br />}<br />#pragma mark - DescriptionViewControllerDelegate<br />- (void)passValue:(id)value forIndexPath:(NSIndexPath *)indexPath {<br />    FieldTableViewCell *definition = cellObjects[indexPath.row];<br />    definition.value = value;<br />    <br />    NSLog(@&quot;definition value %@&quot;,definition.value);<br />    [definition setUp];<br />}<br /><br />#pragma mark - PJListViewControllerDelegate<br />- (void)selectedValuesFromList:(NSArray *)selectedListItems fromIndexPath:(NSIndexPath *)indexPath{<br />    NSLog(@&quot;SELECTED %@&quot;,selectedListItems);<br />    if (selectedListItems != nil &amp;&amp; selectedListItems.count != 0) {<br />        PJListField *cell     = (PJListField *)[self.tableView cellForRowAtIndexPath:indexPath];<br />        NSMutableArray *valueOfObjects = [NSMutableArray new];<br />        <br />        for (NSNumber *number in selectedListItems) {<br />            [valueOfObjects addObject:cell.listItems[number.integerValue]];<br />        }<br />        <br />        cell.value            = valueOfObjects;<br />        cell.userSelectedRows = selectedListItems;<br />        [cell setUp];<br />    } else {<br />        PJListField *cell     = (PJListField *)[self.tableView cellForRowAtIndexPath:indexPath];<br />        cell.value            = nil;<br />        cell.userSelectedRows = selectedListItems;<br />        [cell setUp];<br />    }<br />    <br />}<br /><br /><br />#pragma mark - AlertView Delegate<br />- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {<br />    if (buttonIndex == 1) {<br />        needsShowConfirmation = NO;<br />        [self.navigationController popViewControllerAnimated:YES];<br />    } else {<br />        needsShowConfirmation = YES;<br />    }<br />}<br /><br />#pragma mark -Saving Data<br /><br />-(void)saveData<br />{<br />    count1=0;<br />    countDrop=0;<br />    <br />    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    NSLog(@&quot;%d&quot;,appdel.isBack);<br />    //    if (appdel.isBack==NO) {<br />    <br />    <br />    NSString *resNquid;<br />    __block NSString *resAns;<br />    NSString *type;<br />    resNquid=@&quot;&quot;;<br />    <br />    resAns=@&quot;&quot;;<br />    type=@&quot;&quot;;<br />    NSLog(@&quot;%@&quot;,_seletedStr);<br />    <br />    NSLog(@&quot;%@&quot;,[dicDrop description]);<br />    <br />    NSMutableArray *formValues = [NSMutableArray new];<br />    <br />    for (FieldTableViewCell *cell in cellObjects){<br />        <br />        if (![cell isKindOfClass:[PJSubmitCell class]]) {<br />            if ([cell isKindOfClass:[DropDowncell class]])<br />            {<br />                DropDowncell *textCell          = (DropDowncell *)cell;<br />                <br />                resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />                type = [type stringByAppendingString:@&quot;dropDown&quot;];<br />                type = [type stringByAppendingString:@&quot;,&quot;];<br />                resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />                <br />                if([_dropDownstr length]&gt;0)<br />                {<br />                    if(arrdropDownStr.count&gt;countDrop)<br />                    {<br />                        <br />                        resAns=[resAns stringByAppendingString:arrdropDownStr[countDrop]];<br />                        <br />                    }<br />                    else<br />                    {<br />                        resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />                    }<br />                }<br />                else<br />                    resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />                resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />                countDrop=countDrop+1;<br />            }<br />            else if([cell isKindOfClass:[PJRadioCell class]])<br />            {<br />                <br />                PJRadioCell *textCell          = (PJRadioCell *)cell;<br />                <br />                <br />                if([textCell.Type isEqualToString:@&quot;Radio&quot;])<br />                {<br />                    <br />                    resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />                    type = [type stringByAppendingString:@&quot;radio&quot;];<br />                    type = [type stringByAppendingString:@&quot;,&quot;];<br />                    resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />                    if(_seletedStr.length&gt;0)<br />                    {<br />                        if(arrRadioData.count&gt;count1)<br />                        {<br />                            resAns=[resAns stringByAppendingString:arrRadioData[count1]];<br />                            <br />                        }<br />                    }<br />                    else<br />                        resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />                    resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />                    count1=count1+1;<br />                }<br />                else<br />                {<br />                    resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />                    NSLog(@&quot;%@&quot;,textCell.arrOptions);<br />                    type = [type stringByAppendingString:@&quot;checkBox&quot;];<br />                    type = [type stringByAppendingString:@&quot;,&quot;];<br />                    resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />                    <br />                    //                    [rc.selectedOption enumerateObjectsUsingBlock:^(NSString *strObj, NSUInteger idx, BOOL * _Nonnull stop) {<br />                    //                        NSString *strData = [rc.selectedOption objectAtIndex:idx];<br />                    //                        if([textCell.arrOptions containsObject:strData])<br />                    //                        {<br />                    //<br />                    //                                resAns=[resAns stringByAppendingString:strObj];<br />                    //                        }<br />                    //                    }];<br />                    <br />                    <br />                    <br />                    <br />                    <br />                    for(id obj  in rc.selectedOption)<br />                    {<br />                        NSString *strData = [NSString stringWithFormat:@&quot;%@&quot;,obj];<br />                        NSString *trimmedString =[strData stringByTrimmingCharactersInSet:<br />                                                  [NSCharacterSet whitespaceCharacterSet]];<br />                        NSArray *items = [trimmedString componentsSeparatedByString:@&quot; &quot;];<br />                        if([textCell.arrOptions containsObject:items[0]])<br />                        {<br />                            resAns=[resAns stringByAppendingString:obj];<br />                        }<br />                        //resAns=[resAns stringByAppendingString:@&quot; &quot;];<br />                    }<br />                    resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />                }<br />            }<br />            else if([cell isKindOfClass:[PJTextField class]])<br />            {<br />                PJTextField *textCell          = (PJTextField *)cell;<br />                <br />                resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />                type = [type stringByAppendingString:@&quot;textField&quot;];<br />                type = [type stringByAppendingString:@&quot;,&quot;];<br />                resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />                if([cell.value length]&gt;0)<br />                    resAns=[resAns stringByAppendingString:cell.value];<br />                else<br />                    resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />                resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />            }<br />            else if([cell isKindOfClass:[PJDatePicker class]])<br />            {<br />                <br />                PJDatePicker *textCell          = (PJDatePicker *)cell;<br />                <br />                resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />                type = [type stringByAppendingString:@&quot;datePicker&quot;];<br />                type = [type stringByAppendingString:@&quot;,&quot;];<br />                resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />                resAns=[resAns stringByAppendingString:textCell.textField.text];<br />                //                if([cell.value length]&gt;0)<br />                //                    resAns=[resAns stringByAppendingString:cell.value];<br />                //                else<br />                //                    resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />                resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />            }<br />            <br />        }<br />    }<br />    NSLog(@&quot;%@&quot;,resNquid);<br />    NSLog(@&quot;%@&quot;,resAns);<br />    if ([resNquid length] &gt; 0) {<br />        resNquid = [resNquid substringToIndex:[resNquid length] - 1];<br />    }<br />    if ([resAns length] &gt; 0) {<br />        resAns = [resAns substringToIndex:[resAns length] - 1];<br />    }<br />    if ([type length] &gt; 0) {<br />        type = [type substringToIndex:[type length] - 1];<br />    }<br />    <br />    <br />    dataDictionary=[NSMutableDictionary dictionaryWithObjectsAndKeys:<br />                    [NSString  stringWithFormat:@&quot;%@&quot;,resNquid], @&quot;nQueid&quot;,<br />                    [NSString stringWithFormat:@&quot;%@&quot;,resAns], @&quot;sCorrectAns&quot;,<br />                    [NSString stringWithFormat:@&quot;%@&quot;,type], @&quot;sType&quot;,nil];<br />    NSLog(@&quot;%@&quot;,dataDictionary);<br />    <br />    <br />    // AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />    appdel.dataDictionary<br />    =[NSMutableDictionary dictionaryWithObjectsAndKeys:<br />      [NSString  stringWithFormat:@&quot;%@&quot;,resNquid], @&quot;nQueid&quot;,<br />      [NSString stringWithFormat:@&quot;%@&quot;,resAns], @&quot;sCorrectAns&quot;,<br />      [NSString stringWithFormat:@&quot;%@&quot;,type], @&quot;sType&quot;,nil];<br />    appdel.dicDropDown=dicDrop;<br />    NSLog(@&quot;%@&quot;,appdel.dataDictionary);<br />    <br />    // appdel.isBack=YES;<br />    //}<br />    // isNext=YES;<br />    <br />}<br /><br /><br /><br /><br />//-(void)nextBtn<br />//{<br />//    NSString *resNquid;<br />//    NSString *resAns;<br />//    NSString *type;<br />//    resNquid=@&quot;&quot;;<br />//    resAns=@&quot;&quot;;<br />//    type=@&quot;&quot;;<br />//    NSLog(@&quot;%@&quot;,_seletedStr);<br />//    NSLog(@&quot;%@&quot;,[dicDrop description]);<br />//    NSMutableArray *formValues = [NSMutableArray new];<br />//    for (FieldTableViewCell *cell in cellObjects){<br />//        if (![cell isKindOfClass:[PJSubmitCell class]]) {<br />//            if ([cell isKindOfClass:[DropDowncell class]])<br />//            {<br />//                DropDowncell *textCell          = (DropDowncell *)cell;<br />//                resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />//                type = [type stringByAppendingString:@&quot;dropDown&quot;];<br />//                type = [type stringByAppendingString:@&quot;,&quot;];<br />//                resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />//                if([_dropDownstr length]&gt;0)<br />//                    resAns=[resAns stringByAppendingString:arrdropDownStr[countDrop]];<br />//                else<br />//                    resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />//                resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />//                countDrop=countDrop+1;<br />//            }<br />//            else if([cell isKindOfClass:[PJRadioCell class]])<br />//            {<br />//<br />//                PJRadioCell *textCell          = (PJRadioCell *)cell;<br />//                if([textCell.Type isEqualToString:@&quot;Radio&quot;])<br />//                {<br />//<br />//                    resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />//                    type = [type stringByAppendingString:@&quot;radio&quot;];<br />//                    type = [type stringByAppendingString:@&quot;,&quot;];<br />//                    resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />//                    if(_seletedStr.length&gt;0)<br />//                        resAns=[resAns stringByAppendingString:arrRadioData[count1]];<br />//                    else<br />//                        resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />//                    resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />//                    count1=count1+1;<br />//                }<br />//                else<br />//                {<br />//                    resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />//                    type = [type stringByAppendingString:@&quot;checkBox&quot;];<br />//                    type = [type stringByAppendingString:@&quot;,&quot;];<br />//                    resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />//                    for(id obj  in rc.selectedOption)<br />//                    {<br />//                        resAns=[resAns stringByAppendingString:obj];<br />//                        //resAns=[resAns stringByAppendingString:@&quot; &quot;];<br />//                    }<br />//                    resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />//                }<br />//            }<br />//            else if([cell isKindOfClass:[PJTextField class]])<br />//            {<br />//                PJTextField *textCell= (PJTextField *)cell;<br />//<br />//                resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />//<br />//                type = [type stringByAppendingString:@&quot;textField&quot;];<br />//<br />//                type = [type stringByAppendingString:@&quot;,&quot;];<br />//<br />//                resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />//<br />//                if([cell.value length]&gt;0)<br />//                    resAns=[resAns stringByAppendingString:cell.value];<br />//                else<br />//                    resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />//                resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />//            }<br />//            else if([cell isKindOfClass:[PJDatePicker class]])<br />//            {<br />//<br />//                PJDatePicker *textCell          = (PJDatePicker *)cell;<br />//<br />//                resNquid = [resNquid stringByAppendingString:textCell.nQueid];<br />//                type = [type stringByAppendingString:@&quot;datePicker&quot;];<br />//                type = [type stringByAppendingString:@&quot;,&quot;];<br />//                resNquid = [resNquid stringByAppendingString:@&quot;,&quot;];<br />//                if([cell.value length]&gt;0)<br />//                    resAns=[resAns stringByAppendingString:cell.value];<br />//                else<br />//                    resAns=[resAns stringByAppendingString:@&quot;&quot;];<br />//                resAns=[resAns stringByAppendingString:@&quot;,&quot;];<br />//            }<br />//<br />//<br />//            //        FormValues *value = [FormValues new];<br />//            //            value.key             = cell.key;<br />//            //            value.value           = cell.value;<br />//            //<br />//            //            [formValues addObject:value];<br />//<br />//<br />//<br />//        }<br />//    }<br />//    NSLog(@&quot;%@&quot;,resNquid);<br />//    NSLog(@&quot;%@&quot;,resAns);<br />//    if ([resNquid length] &gt; 0) {<br />//        resNquid = [resNquid substringToIndex:[resNquid length] - 1];<br />//    }<br />//    if ([resAns length] &gt; 0) {<br />//        resAns = [resAns substringToIndex:[resAns length] - 1];<br />//    }<br />//    if ([type length] &gt; 0) {<br />//        type = [type substringToIndex:[type length] - 1];<br />//    }<br />//    //    EKToast *toast = [[EKToast alloc]initWithMessage:[NSString stringWithFormat:@&quot;%@&quot;,formValues]];<br />//    //    toast.position           = ToastPositionBottom;<br />//    //    toast.delay              = 3.0f;<br />//    //    toast.shouldAutoDestruct = NO;<br />//    //    [toast show:nil];<br />//    UIStoryboard *storyboard =[UIStoryboard storyboardWithName:@&quot;Main&quot; bundle:NULL];<br />//<br />//<br />//<br />//       dataDictionary=[NSMutableDictionary dictionaryWithObjectsAndKeys:<br />//                                      [NSString  stringWithFormat:@&quot;%@&quot;,resNquid], @&quot;nQueid&quot;,<br />//                                      [NSString stringWithFormat:@&quot;%@&quot;,resAns], @&quot;sCorrectAns&quot;,<br />//                                    [NSString stringWithFormat:@&quot;%@&quot;,type], @&quot;sType&quot;,nil];<br />//        NSLog(@&quot;%@&quot;,dataDictionary);<br />//<br />//<br />////    [defaults setObject:dataDictionary forKey:@&quot;thirdViewController&quot;];<br />////    [defaults synchronize];<br />//<br />////    if (isNext==NO) {<br />////        AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />////        appdel.dataDictionary<br />////        =[NSMutableDictionary dictionaryWithObjectsAndKeys:<br />////          [NSString  stringWithFormat:@&quot;%@&quot;,resNquid], @&quot;nQueid&quot;,<br />////          [NSString stringWithFormat:@&quot;%@&quot;,resAns], @&quot;sCorrectAns&quot;,<br />////          [NSString stringWithFormat:@&quot;%@&quot;,type], @&quot;sType&quot;,nil];<br />////        NSLog(@&quot;%@&quot;,appdel.dataDictionary);<br />////      //  AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />////         appdel.dicDropDown=dicDrop;<br />////        //[appdel.dicDropDown removeAllObjects];<br />////<br />////        AddClientSectionFourViewController *fourth=(AddClientSectionFourViewController *)[storyboard instantiateViewControllerWithIdentifier:@&quot;AddClientSectionFourViewController&quot;];<br />////        fourth.dataDictionary = [[NSMutableDictionary alloc] init];<br />////        fourth.dataDictionary =appdel.dataDictionary;<br />////<br />////        [self.navigationController pushViewController:fourth animated:NO];<br />////<br />////    }<br />////    else {<br />//        AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />//        appdel.dataDictionary1<br />//<br />//        =[NSMutableDictionary dictionaryWithObjectsAndKeys:<br />//          [NSString  stringWithFormat:@&quot;%@&quot;,resNquid], @&quot;nQueid&quot;,<br />//          [NSString stringWithFormat:@&quot;%@&quot;,resAns], @&quot;sCorrectAns&quot;,<br />//          [NSString stringWithFormat:@&quot;%@&quot;,type], @&quot;sType&quot;,nil];<br />//         appdel.dicDropDown=dicDrop;<br />//        NSLog(@&quot;%@&quot;,appdel.dataDictionary1);<br />//<br />//<br />//<br />////    if (isNext) {<br />////        isNext=NO;<br />////        AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />////        appdel.dicDropDown=dicDrop;<br />////<br />////        //  appdel.dataDictionary=dataDictionary;<br />////        //        [appdel.dataDictionary1 setObject:arrdropDownStr forKey:@&quot;sCorrectAns&quot;];<br />////        //        NSLog(@&quot;AppDict:%@&quot;,appdel.dataDictionary1);<br />////    }<br />////    else<br />////    {<br />//<br />////        NSMutableDictionary *defaultData = [defaults objectForKey:@&quot;thirdViewController&quot;];<br />////        NSLog(@&quot;%@&quot;,defaultData);<br />//<br />//            //}<br />//<br />////    NSUserDefaults *userDefault =[NSUserDefaults standardUserDefaults];<br />////    [userDefault setObject:dataDictionary forKey:@&quot;isNext&quot;];<br />////    [userDefault synchronize];<br />////    NSLog(@&quot;%@&quot;,[userDefault valueForKey:@&quot;isNext&quot;]);<br />//<br />//       //AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />//    if (appdel.isBack==NO) {<br />//        AddClientSectionFourViewController *fourth=(AddClientSectionFourViewController *)[storyboard instantiateViewControllerWithIdentifier:@&quot;AddClientSectionFourViewController&quot;];<br />//        fourth.dataDictionary = [[NSMutableDictionary alloc] init];<br />//        fourth.dataDictionary = appdel.dataDictionary1;<br />//        appdel.isBack=YES;<br />//        appdel.dataDictionary=dataDictionary;<br />//        [self.navigationController pushViewController:fourth animated:NO];<br />//    }<br />//   else<br />//    {<br />//    AddClientSectionFourViewController *fourth=(AddClientSectionFourViewController *)[storyboard instantiateViewControllerWithIdentifier:@&quot;AddClientSectionFourViewController&quot;];<br />//            fourth.dataDictionary = [[NSMutableDictionary alloc] init];<br />//            fourth.dataDictionary = appdel.dataDictionary ;<br />//        [self.navigationController pushViewController:fourth animated:NO];<br />//<br />//<br />//    }<br />//   // [appdel.dataDictionary removeAllObjects];<br />//<br />////    AddClientSectionFourViewController *fourth=(AddClientSectionFourViewController *)[storyboard instantiateViewControllerWithIdentifier:@&quot;AddClientSectionFourViewController&quot;];<br />////    fourth.dataDictionary = [[NSMutableDictionary alloc] init];<br />////    fourth.dataDictionary = [userDefault valueForKey:@&quot;isNext&quot;];<br />////    //appdel.isBack=YES;<br />////    [self.navigationController pushViewController:fourth animated:NO];<br />////<br />////    AppDelegate *appdel=(AppDelegate*)[[UIApplication sharedApplication] delegate];<br />//   // appdel.isBack=YES;<br />//}<br /><br />@end<br /></div></message>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T13:30:57+0530" alias="karishma"></status>
<status type="online" sender="karishma@zaptech-pc" time="2016-04-19T13:31:06+0530" alias="karishma"></status>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T13:41:34+0530" alias="karishma"></status>
<status type="away" sender="karishma@zaptech-pc" time="2016-04-19T13:51:34+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">Away</span></div></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T14:04:10+0530" alias="karishma"></status>
<status type="online" sender="karishma@zaptech-pc" time="2016-04-19T14:04:18+0530" alias="karishma"></status>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T14:18:50+0530" alias="karishma"></status>
<status type="away" sender="karishma@zaptech-pc" time="2016-04-19T14:28:50+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">Away</span></div></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T14:28:52+0530" alias="karishma"></status>
<status type="online" sender="karishma@zaptech-pc" time="2016-04-19T14:28:52+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T14:59:56+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">hi</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T15:00:04+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">code formation karvanu 6</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T15:00:29+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">hu j comment code 6 delete kari dau</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T15:00:30+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">?</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T15:00:38+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">from whole app</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T15:11:49+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T15:12:31+0530" alias="vivek "><div>continue</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T15:14:20+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">hm</span></div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T15:39:14+0530" alias="karishma"></status>
<message sender="vivek@192.168.15.43" time="2016-04-19T15:42:05+0530" alias="vivek "><div>Hello</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T15:42:34+0530" alias="vivek "><div>please tell me if there is any thing pending</div></message>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T15:48:08+0530" alias="karishma"></status>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T15:59:35+0530" alias="karishma"></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T15:59:46+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T15:59:58+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:00:17+0530" alias="vivek "><div>Please test whole app</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:00:27+0530" alias="vivek "><div>I am also testig</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:00:39+0530" alias="vivek "><div>You try to test in device</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:05:11+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">yes</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:05:18+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">but freee nathi</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:05:27+0530" alias="vivek "><div>ok</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:05:47+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">i also tested in device&apos;</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:05:59+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:06:11+0530" alias="vivek "><div>have you got any issue</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:06:20+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">no</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:06:24+0530" alias="vivek "><div>hmmm</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:06:45+0530" alias="vivek "><div>or not testing ?</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:11:56+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">pls</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:12:06+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">m doing testing in device</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T16:12:17+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">issue male a hu solve karu 6u</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T16:12:23+0530" alias="vivek "><div>ok</div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T16:43:45+0530" alias="karishma"></status>
<status type="away" sender="karishma@zaptech-pc" time="2016-04-19T16:53:45+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">Away</span></div></status>
<status type="available" sender="karishma@zaptech-pc" time="2016-04-19T17:18:56+0530" alias="karishma"></status>
<status type="online" sender="karishma@zaptech-pc" time="2016-04-19T17:19:04+0530" alias="karishma"></status>
<message sender="karishma@zaptech-pc" time="2016-04-19T17:58:28+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">take pull</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T17:58:35+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T17:58:56+0530" alias="vivek "><div>done</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T17:59:19+0530" alias="vivek "><div>Please show the build to Ashish Bhai, When he is free</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T17:59:35+0530" alias="vivek "><div> </div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:01:02+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">checked</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:01:21+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">but emne 1 jagya crash mali</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:01:53+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">scroll karti vakhte sub category ma</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:02:00+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">first time</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:02:05+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">pa6i nai mali</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:04:33+0530" alias="vivek "><div>ok</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:04:45+0530" alias="vivek "><div>I will check</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:05:05+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">k</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:30:25+0530" alias="vivek "><div>Hello</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:30:43+0530" alias="vivek "><div>I am living at 7:00 PM</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:31:00+0530" alias="vivek "><div>If you have any query or issue please tell me</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:32:42+0530" alias="vivek "><div> </div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:33:11+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">no</span></div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:33:20+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">sir build send kare 6</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:33:33+0530" alias="vivek "><div>ok good</div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:33:41+0530" alias="vivek "><div>:)</div></message>
<message sender="karishma@zaptech-pc" time="2016-04-19T18:34:42+0530" alias="karishma"><div><span style="font-family: Helvetica; font-size: 12pt;">hmm</span></div></message>
<message sender="vivek@192.168.15.43" time="2016-04-19T18:34:56+0530" alias="vivek "><div>COOL</div></message>
<status type="idle" sender="karishma@zaptech-pc" time="2016-04-19T18:46:41+0530" alias="karishma"></status>
<event type="windowClosed" sender="vivek@192.168.15.43" time="2016-04-19T18:51:54+0530"></event></chat>